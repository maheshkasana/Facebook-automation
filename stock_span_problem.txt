def solution_one(n,lst):
    print("\n\n***Soluton O(n^2), by using Two Forloops")
    cmp=0
    for i in range(n):
        k=0
        for j in range(i,-1,-1):
            cmp=cmp+1 
            if lst[i]>=lst[j]:
               k=k+1
            else:
                break
        print(k)
    print("\nTotal Comperasion : ",cmp)

def solution_sec(n,lst):
    print("\n\n***Soluton , by using Two Stacks")
    stc_one=list()
    stc_two=list()
    cmp=0
    for i in range(n):
        k=1
        
        while len(stc_one)!=0 and stc_one[len(stc_one)-1]<=lst[i]:
            cmp=cmp+1
            k=k+1
            stc_two.append(stc_one.pop())
        print(k)
        while len(stc_two)!=0:
            stc_one.append(stc_two.pop())
        stc_one.append(lst[i])
    print("\nTotal Comperasion : ",cmp)

class node:
    def __init__(self):
        self.data=0
        self.count=0
        self.lst=-1
        
    
def solution_thrd(n,lst):
    print("\n\n***Soluton , by using Memorization")
    lst_main=list()
    cmp=0
    for i in range(n):
        k=0
        l= i-1
        while l!=-1 and lst_main[l].data<=lst[i]:
            cmp=cmp+1
            k=k+lst_main[l].count
            k=k+1
            l=lst_main[l].lst
        x = node()
        x.data=lst[i]
        x.count=k
        x.lst=l
        lst_main.append(x)
    for i in range(n):
        print(lst_main[i].count+1)
    print("\nTotal Comperasion : ",cmp)
            
def solution_four(n,lst):
    print("\n\n***Soluton , by using Memorization and GFG")
    count=list()
    stc=list()
    stc.append(0)
    count.append(1)
    cmp=0
    for i in range(1,n,1):
        while len(stc)!=0 and lst[stc[len(stc)-1]]<=lst[i]:
            cmp=cmp+1 #for Efficency
            stc.pop()
        count.append(i+1 if len(stc)==0 else i-stc[len(stc)-1])
        stc.append(i)
    print(count)
    print("\nTotal Comperasion : ",cmp)
        
    
    
        
                
    


def main():
    print("\nStock Spam Problem")
    n=int(input("\nEnter The N : "))
    lst=list()
    for i in range(n):
        lst.append(int(input("Data : ")))
    print("\nEntred Data : ")
    print(lst)
    solution_one(n,lst)
    solution_sec(n,lst)
    solution_thrd(n,lst)
    solution_four(n,lst)
    
    
    



if __name__=="__main__":
    main()
